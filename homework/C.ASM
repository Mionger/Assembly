_DATA	SEGMENT	'DATA'
STR_CH		DB	0DH, 0AH,"CHARACTER:",'$'
COUNTER_CH	DB	0
STR_NU		DB	0DH, 0AH, "NUMBER:   " , '$'
COUNTER_NU	DB	0
STR_OT		DB	0DH, 0AH, "OTHER:    "   , '$'	
COUNTER_OT	DB	0
BUFFER		DB	82	DUP(?)
CHR			DB	?
_DATA	ENDS

_CODE	SEGMENT	'CODE'

ASSUME	CS:_CODE,	DS:_DATA

MAIN:	
	MOV	AX,_DATA
	MOV	DS,AX
	
	;INPORT SETTING
	MOV	BUFFER[0],80
	LEA	DX,BUFFER
	MOV	AH,0AH
	INT	21H

	;COUNTER INITIALIZE
	MOV	CL,BUFFER[1]
	MOV	CH,0
	MOV	BX,0

	;CHECK LOOP
LOOP_BODY:
	CLD
	;DOWNERN CHAR CHECK
	CMP	BUFFER[2+BX],7AH
	JG	OTHER
	CMP	BUFFER[2+BX],61H
	JGE	CHAR

	;UPPER CHAR CHECK
	CMP	BUFFER[2+BX],5AH
	JG	OTHER
	CMP	BUFFER[2+BX],41H
	JGE	CHAR

	;NUMBER CHECK
	CMP	BUFFER[2+BX],39H
	JG	OTHER
	CMP	BUFFER[2+BX],30H
	JGE	NUMBER

	;OTHER(END_IF)
	JMP	OTHER

CHAR:
	INC	COUNTER_CH
	INC	BX
	JMP	ENE_IF
NUMBER:	
	INC	COUNTER_NU
	INC	BX
JMP	ENE_IF
OTHER:
	INC	COUNTER_OT
	INC	BX

ENE_IF:
	LOOP	LOOP_BODY

	;OUT	SETTING
	MOV	AH,09H
	LEA	DX,STR_CH
	INT	21H
	MOV	DX,0
	MOV	BL,COUNTER_CH
	MOV	CHR,BL
	MOV	CL,4
	ROL	CHR,CL
	MOV	DL,CHR
	AND	DL,0FH
	CMP	DL,9
	JG	ELSE_1
THEN_1:
	ADD	DL,'0'
	JMP	ENDIF_1
ELSE_1:
	ADD	DL,'A'-10
ENDIF_1:
	MOV	AH,02H
	INT	21H
	MOV	CL,4
	ROL	CHR,CL
	MOV	DL,CHR
	AND	DL,0FH
	CMP	DL,9
	JG	ELSE_2
THEN_2:
	ADD	DL,'0'
	JMP	ENDIF_2
ELSE_2:
	ADD	DL,'A'-10
ENDIF_2:
	MOV	AH,02H
	INT	21H
	MOV	DL,48H
	MOV	AH,02H
	INT	21H
	MOV	DL,3DH
	MOV	AH,02H
	INT	21H

	MOV	AH,0
	MOV	AL,COUNTER_CH
	MOV	BL,10
	DIV	BL
	MOV	DL,AL
	MOV	DH,AH
	MOV	AH,02H
	ADD	DL,30H
	INT	21H
	MOV	DL,DH
	ADD	DL,30H
	MOV	AH,02H
	INT 21H
	MOV	DL,44H
	MOV	AH,02H
	INT 21H

	MOV	AH,09H
	LEA	DX,STR_NU
	INT	21H
	MOV	DX,0
	MOV	BL,COUNTER_NU
	MOV	CHR,BL
	MOV	CL,4
	ROL	CHR,CL
	MOV	DL,CHR
	AND	DL,0FH
	CMP	DL,9
	JG	ELSE_3
THEN_3:
	ADD	DL,'0'
	JMP	ENDIF_3
ELSE_3:
	ADD	DL,'A'-10
ENDIF_3:
	MOV	AH,02H
	INT	21H
	MOV	CL,4
	ROL	CHR,CL
	MOV	DL,CHR
	AND	DL,0FH
	CMP	DL,9
	JG	ELSE_4
THEN_4:
	ADD	DL,'0'
	JMP	ENDIF_4
ELSE_4:
	ADD	DL,'A'-10
ENDIF_4:
	MOV	AH,02H
	INT	21H
	MOV	DL,48H
	MOV	AH,02H
	INT	21H
	MOV	DL,3DH
	MOV	AH,02H
	INT	21H

	MOV	AH,0
	MOV	AL,COUNTER_NU
	MOV	BL,10
	DIV	BL
	MOV	DL,AL
	MOV	DH,AH
	MOV	AH,02H
	ADD	DL,30H
	INT	21H
	MOV	DL,DH
	ADD	DL,30H
	MOV	AH,02H
	INT 21H
	MOV	DL,44H
	MOV	AH,02H
	INT 21H

	MOV	AH,09H
	LEA	DX,STR_OT
	INT	21H
	MOV	DX,0
	MOV	BL,COUNTER_OT
	MOV	CHR,BL
	MOV	CL,4
	ROL	CHR,CL
	MOV	DL,CHR
	AND	DL,0FH
	CMP	DL,9
	JG	ELSE_5
THEN_5:
	ADD	DL,'0'
	JMP	ENDIF_5
ELSE_5:
	ADD	DL,'A'-10
ENDIF_5:
	MOV	AH,02H
	INT	21H
	MOV	CL,4
	ROL	CHR,CL
	MOV	DL,CHR
	AND	DL,0FH
	CMP	DL,9
	JG	ELSE_6
THEN_6:
	ADD	DL,'0'
	JMP	ENDIF_6
ELSE_6:
	ADD	DL,'A'-10
ENDIF_6:
	MOV	AH,02H
	INT	21H
	MOV	DL,48H
	MOV	AH,02H
	INT	21H
	MOV	DL,3DH
	MOV	AH,02H
	INT	21H

	MOV	AH,0
	MOV	AL,COUNTER_OT
	MOV	BL,10
	DIV	BL
	MOV	DL,AL
	MOV	DH,AH
	MOV	AH,02H
	ADD	DL,30H
	INT	21H
	MOV	DL,DH
	ADD	DL,30H
	MOV	AH,02H
	INT 21H
	MOV	DL,44H
	MOV	AH,02H
	INT 21H

	MOV	AX,4C00H
	INT	21H
_CODE	ENDS

	END	MAIN
